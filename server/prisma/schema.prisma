generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Admin {
  id           String   @id @default(uuid())
  username     String
  email        String
  password     String?
  authType     AuthType
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt()
}

model Component {
  id       String @id @default(uuid())
  name     String
  category String
  html     String @db.Text
  css      String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()

  @@index([id])
  @@index([name])
  @@index([category])
}

model LinkList {
  id    String @id @default(uuid())
  links Link[]
}

model Link {
  id         String   @id @default(uuid())
  label      String
  href       String
  linkList   LinkList @relation(fields: [linkListId], references: [id])
  linkListId String

  @@index([linkListId])
}

model Section {
  id         String      @id @default(uuid())
  type       SectionType
  mode       SectionMode @default(NORMAL)
  links      Json? // structured links
  customHtml String?     @db.Text // optional HTML fragment (even in NORMAL mode)
  customCss  String?     @db.Text // optional CSS fragment (even in NORMAL mode)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum SectionType {
  HEADER
  FOOTER
}

enum SectionMode {
  NORMAL
  CUSTOM
}

model Page {
  id       String @id @default(uuid())
  title    String
  slug     String @unique
  html     String @db.Text
  css      String @db.Text
  status   String
  metadata Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()

  @@index([id])
  @@index([slug])
}

enum AuthType {
  oauth
  manual
}
